@model MIT.Repository.Funcionario
@inject MIT.CRM.Services.AppServices AppSettings

@{
    var conexao = ViewBag.conexao;
    var url = ViewBag.url;
}



@section scripts {
    
    <!-- Variaveis Globais -->
    <script type="text/javascript">
        var ferias = [];
        var tipoFerias = "Dia de Férias";
        var numDiasMarcados = 0;

        var numMeiosDiasMarcados = 0;
        var numDiasAntecipados = 0;
        var numMeiosAntecipados = 0;
    </script>

    <!-- Boostrap Annual Calendar-->
    <script type="text/javascript">

        $(document).ready(function () {

            var currentYear = new Date().getFullYear();

            $('#calendario').calendar({
                enableContextMenu: true,
                dataSource:[],
                mouseOnDay: function (e) {
                    if (e.events.length > 0) {
                        var content = '';

                        for (var i in e.events) {
                            content += '<div class="event-tooltip-content">'
                                            + '<div class="event-name" style="color:' + e.events[i].color + '">' + e.events[i].name + '</div>'
                                            + '<div class="event-location">' + e.events[i].location + '</div>'
                                        + '</div>';
                        }

                        $(e.element).popover({
                            trigger: 'manual',
                            container: 'body',
                            html: true,
                            content: content
                        });

                        $(e.element).popover('show');
                    }
                },
                mouseOutDay: function (e) {
                    if (e.events.length > 0) {
                        $(e.element).popover('hide');
                    }
                },
                dayContextMenu: function (e) {
                    $(e.element).popover('hide');
                },
                enableRangeSelection: true,

                selectRange: function (e) {

                }
            })

            var apiUrl = location.origin + "/RH/ListaMarcacaoFerias";

            $.ajax({
                type: "POST",
                dataType: "json",

                url: apiUrl,
                data: { funcionarioId: '@Model.id', ano: '@DateTime.Now.Year' },

                success: function (data) {

                    data.forEach(preencherCalendario);

                    function preencherCalendario(value, index, ar) {

                        var color = "#337ab7";

                        switch (value.estado) {
                            case "Por Aprovar":
                                color = "#f0ad4e";
                                break;

                            case "Aprovado":
                                color = '#257e4a';
                                break;
                            case "Recusado":
                                color = "#d9534f";

                                break;

                        }

                        switch (value.tipo) {
                            case 'Dia de Férias':

                                numDiasMarcados++;

                                $("#txtDiasMarcados").val(numDiasMarcados);

                                break;

                            case 'Meio Dia de Férias':
                                numMeiosDiasMarcados++;
                                $("#txtMeiosDiasMarcados").val(numMeiosDiasMarcados);
                                break;

                            case 'Dia Antecipado':
                                numDiasAntecipados++;

                                $("#txtDiasAntecipados").val(numDiasAntecipados);

                                break;
                            case 'Meio Dia Antecipado':
                                numMeiosAntecipados++;

                                $("#txtMeiosDiasAntecipados").val(numMeiosAntecipados);

                                break;

                        }

                        var day = moment(value.dataFeria);

                        var currentYear = new Date().getFullYear();
                        
                        var evento = {
                            id: 0,
                            name: value.tipo,
                            location: value.estado,
                            startDate: day.toDate(),
                            endDate: day.toDate(),
                            color: color
                        }

                        saveEvent(evento)

                        if (value.estado == "Por Aprovar") {




                        }



                    }
                },
                error: function (error) {
                    var x = error; //break here for debugging.
                }
            });
        })


        function saveEvent(evento) {

            var dataSource = $('#calendario').data('calendar').getDataSource();

            var newId = 0;

            for (var i in dataSource) {
                if (dataSource[i].id > newId) {
                    newId = dataSource[i].id;
                }
            }

            newId++;
            evento.id = newId;

            dataSource.push(evento);

            $('#calendario').data('calendar').setDataSource(dataSource);

        }

        function existeData(events,evento) {

            for(i = 0 ; i < events.length; i++){
                if (events[i].dataFeria == evento.dataFeria) {

                    alert("O sistema não permite marcar duas vezes a mesma data")
                    return true

                }

            }
            return false;
        }

        function submeterPedido() {

            for(i=0;i<ferias.length;i++){
                var feria = ferias[i];

                if(feria.estado ==""){
                    feria.estado = "Por Aprovar";
                    $.ajax({
                        type: "POST",
                        async: true,
                        dataType: "json",
                        url: location.origin + "/RH/MarcacaoFerias",
                        data: feria,
                        success: function (data) {

                            //window.location = "/RH/Index";

                        },
                        error: function (error) {
                            var x = error; //break here for debugging.
                        }
                    });
                }

            }


            var mensaguem = "";
            mensaguem = "<table>"
            mensaguem += "<tr>" +
                "<th>Data</th>" +
                "<th>Tipo</th>" +
                "<th>Estado</th> </tr>";

            for( j = 0; j < ferias.length; j++ ){
                mensaguem += "<tr>" +
                "<td>" +ferias[j].dataFeria +"</td>" +
                "<td>" + ferias[j].tipo + "</td>" +
                "<td>" + ferias[j].estado + "</td> </tr>";

            }

            mensaguem += "</table>";

            var apiUrl = location.origin + "/Funcionario/sendEmailCriacaoFerias";

            $.ajax({
                type: "POST",
                dataType: "json",
                async: true,
                url: apiUrl,
                data: { funcionarioId: '@Model.id', 'mensaguem':mensaguem, titulo:"Pedido de Ferias do Funcionario @Model.nome.First()" },
                success: function () {

                    //window.location = "/RH/Index";

                },
                error: function (error) {
                    var x = error; //break here for debugging.
                }
            });

            window.location = "/RH/Details/" + '@Model.id';

        }
    </script>

}

<!--Page Breadcrumb -->
<ol class="breadcrumb" breadcrumb="">
    @*<li><span>RH</span></li>
        <li><span>Funcionario</span></li>*@
    <li><span>Ferias</span></li>

    <li><span>@ViewData["modulo_value"]</span></li>


    @*@await Html.PartialAsync("_BreadcrumbMenu")*@

    <div class="breadcrumb-menu">
        <div class="btn-group" role="group" aria-label="Button group with nested dropdown">
            <center>
                <a href="#" class="btn btn-default btn-sm" type="button" role="button">
                    <span class="fa fa-print" aria-hidden="true"></span>
                    Imprimir
                </a>

                <a href="#" class="btn btn-default btn-sm" type="button" role="button">
                    <span class="fa fa-envelope" aria-hidden="true"></span>
                    Email Responsavel

                </a>

                <a href="@Url.Action("Create", "RH",new { id = Model.id })" type="button" class="btn btn-default btn-sm " role="button">
                    <span class="fa fa-pencil-square-o" aria-hidden="true"></span>
                    Editar
                </a>

                @if (User.IsInRole("Administrator") || User.IsInRole("Director de Area"))
                {
                    <a href="@Url.Action("Edit", "RH", new { id = Model.id })" type="button" class="btn btn-default btn-sm " role="button">
                        <span class="fa fa-check-square-o" aria-hidden="true"></span>
                        Aprovação
                    </a>
                }
                
            </center>

        </div>

    </div>
</ol>

<div class="container-fluid">
    <div class="animated fadeIn ng-scope">
        <div class="row">
            <div class="card card-full ng-scope">
                <div class="card-block">

                    <div class="row">
                        <div class="col-xs-5">
                            <h4 class="card-title">Dados Funcionario</h4>

                            @*<div class="small text-muted" style="margin-top:-10px;">November 2015</div>*@
                        </div>

                    </div>
                    <hr class="m-a-0">

                    <div class="row">
                        @Component.Invoke("Funcionario_Inf_Ferias", Model.id, DateTime.Now.Year)
                    </div>


                    <div class="row">
                        <div id="calendario"></div>

                    </div>


                </div>
            </div>
        </div>
        
    </div>
</div>


